---
import BlogsCard from "./BlogsCard.astro";
import SectionHeader from "@/components/SectionHeader.astro";
import { getEntry } from "astro:content";

// Define the structure of a blog post
interface Blog {
  title: string;
  subtitle: string;
  description: string;
}

// Define the props for this component
interface Props {
  content?: Blog; // Optional blog data passed as props
  largeHeading?: boolean; // Flag for large heading style
  visiblePosts?: number; // Number of posts to display
  posts?: any[]; // Posts to display
  cardLayout?: string; // Layout for blog cards
  showHeader?: boolean; // Whether to show the header section
}

let { content, largeHeading, visiblePosts, posts, cardLayout, showHeader = true } = Astro.props;

// If no content is provided, get default blog section content
if (!content) {
  return Astro.redirect("/404");
}

// Limit the number of posts to display if specified
visiblePosts && posts && (posts = posts.slice(0, visiblePosts));
---

{
  (
    <section class="section overflow-hidden">
      <div class="container">
        <div class="row">
          {showHeader && (
            <div class="mx-auto text-center lg:col-10" data-aos="fade-up-sm">
              <SectionHeader
                tagline={content?.subtitle || ''}
                heading={content?.title || ''}
                subheading={content?.description || ''}
              />
            </div>
          )}
          <div class="col-12" data-aos="fade-up-sm" data-aos-delay="200">
            <div class="row gx-4 gy-5 justify-center md:gx-5">
              {posts?.map((blog) => (
                <div
                  class={` ${cardLayout === "creative" ? "md:col-6" : "md:col-6 lg:col-4"}`}>
                  {blog && <BlogsCard cardLayout={cardLayout} content={blog} />}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
} 