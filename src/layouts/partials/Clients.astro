---
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";

interface Clients {
  title: string;
  list: string[];
}

const { list }: Clients = (await getEntry("sections", "clients")).data;
---

<section class="section">
  <div class="max-w-[85rem] mx-auto px-3">
    <div class="row">
      <div class="col-12" data-aos="fade-up-sm">
        <div class="text-center sm:flex sm:flex-col">
          <p class="text-black pt-4text-[1rem]">
            We have been working with some Fortune 500+ clients
          </p>
        </div>
      </div>
      <div class="col-12 pt-10 overflow-hidden" data-aos="fade-up-sm" data-aos-delay="200">
        <div class="marquee">
          <div class="marquee-track">
            {[...Array(2)].map(() => (
              <div class="marquee-content">
                {list?.map((logo) => (
                  <div class="flex items-center mx-6">
                    <img src={logo} alt="brand logo" class="w-36" height="120" />
                  </div>
                ))}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .marquee {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .marquee::before,
  .marquee::after {
    content: "";
    position: absolute;
    top: 0;
    width: 10rem;
    height: 100%;
    z-index: 1;
  }

  .marquee::before {
    left: 0;
    background: linear-gradient(to right, white, transparent);
  }

  .marquee::after {
    right: 0;
    background: linear-gradient(to left, white, transparent);
  }

  .marquee-track {
    display: flex;
    opacity: 1;
    width: fit-content;
    animation: scroll 30s linear infinite;
  }

  .marquee-content {
    display: flex;
    align-items: center;
    white-space: nowrap;
    flex-shrink: 0;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  /* Pause animation when hovering */
  .marquee:hover .marquee-track {
    animation-play-state: paused;
  }
</style>
