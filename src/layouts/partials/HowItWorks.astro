---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";
import SectionHeader from "../components/SectionHeader.astro";

interface HowItWorks {
  title: string;
  subtitle: string;
  description: string;
  list: {
    icon: string;
    title: string;
    description: string;
  }[];
}

const { title, subtitle, description, list }: HowItWorks = (
  await getEntry("sections", "how-it-works")
).data;
---

<section class="section">
  <div class="max-w-[85rem] mx-auto px-3">
    <div class="row">
      <div class="mx-auto lg:col-11">
        <SectionHeader
          tagline={subtitle}
          heading={title}
          subheading={description}
          alignment="center"
        />
      </div>
      <div class="col-12 pt-20">
        <div class="row g-4 justify-center">
          {
            list?.map((item, index) => (
              <div
                class="md:col-6 lg:col-4"
                data-aos="fade-up-sm"
                data-aos-delay={index * 100}
              >
                <div class="min-h-full rounded-3xl bg-white p-4 transition-all shadow-xl">
                  {/* Image Container */}
                  <div class="mb-3">
                    <div class="aspect-square w-full rounded-2xl ">
                      {item.icon && (
                        <img 
                          src={item.icon} 
                          alt={`icon related to ${item.title}`} 
                          class="h-full w-full object-contain" 
                        />
                      )}
                    </div>
                  </div>
                  {/* Content Container */}
                  <div class="text-left mb-4">
                    {item.title && (
                      <h3 
                        class="h5 mb-2 md:text-3xl font-medium text-dark tracking-wide" 
                        set:html={markdownify(item.title)} 
                      />
                    )}
                    {item.description && (
                      <p 
                        class="text-text"
                        set:html={markdownify(item.description)} 
                      />
                    )}
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>
