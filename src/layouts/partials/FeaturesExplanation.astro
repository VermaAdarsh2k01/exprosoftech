---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";
import SectionHeader from "../components/SectionHeader.astro";

interface FeaturesExplanation {
  title: string;
  subtitle: string;
  description: string;
  image: string;
  second_image: string;
  list: {
    row: { title: string; description: string }[];
  }[];
  second_list: {
    row: { title: string; description: string }[];
  }[];
}

const { hideHeadingBar } = Astro.props;

const {
  title,
  image,
  second_image,
  subtitle,
  description,
  list,
  second_list,
}: FeaturesExplanation = (await getEntry("sections", "features-explanation"))
  .data;
---

{
  (
    <section class="section features-explanation" id="features-explanation">
      <div class="container">
        <div class="row">
          {!hideHeadingBar && (
            <div class="mx-auto lg:col-11 xl:col-11">
              <SectionHeader
                tagline={subtitle}
                heading={title}
                subheading={description}
                alignment="center"
              />
            </div>
          )}

          <div class="sticky-wrapper">
            <div class="stacked-container">
              {/* First Section - SFA */}
              <div class="stacked-section first-section pb-10 mt-20 md:mt-0">
                <div class="product-label">Sales Force Automation</div>
                <div class="col-12">
                  <div class="relative flex justify-center gap-3 max-xl:flex-wrap xl:mb-12 xl:mt-16 xl:flex-col xl:items-center xl:gap-y-8">
                    {/* Features List */}
                    {list?.map((item, mindex) => (
                      <div
                        class={`order-2 flex gap-x-3 xl:order-0 max-xl:justify-center xl:items-center ${
                          mindex < 1
                            ? "flex-col max-xl:gap-y-3 md:w-[60%] xl:w-auto xl:flex-row"
                            : "flex-col gap-y-3 sm:flex-row"
                        }`}
                      >
                        {/* Main Features List */}
                        {item.row.map((item, index) => (
                          <div
                            class={`${(index + 1) % 2 === 0 ? "xl:order-3" : "xl:order-1"} xl:max-w-[370px]`}
                          >
                            <div
                              class="mb-12 min-h-full rounded-xl bg-theme-light px-6 py-12 text-center last:mb-0 md:rounded-3xl"
                              data-aos="fade-up-sm"
                              data-aos-delay={index * 100}
                            >
                              {item.title && (
                                <h3
                                  class="h6 mb-2"
                                  set:html={markdownify(item.title)}
                                />
                              )}
                              {item.description && (
                                <p set:html={markdownify(item.description)} />
                              )}
                            </div>
                          </div>
                        ))}

                        {/* Separator */}
                        <div class="xl:order-2 max-xl:hidden">
                          <ImageMod
                            class="w-full"
                            src={"/images/features/line.png"}
                            alt="line svg"
                          />
                        </div>
                      </div>
                    ))}

                    {/* Product Image (In Mobile Frame) */}
                    {image && (
                      <div class="order-1 w-[40%] xl:order-0 sm:w-[30%]">
                        <img
                          class="mx-auto xl:absolute xl:left-1/2 xl:top-1/2 xl:w-[35%] xl:-translate-x-1/2 xl:-translate-y-1/2"
                          src={image}
                          alt={title}
                        />
                      </div>
                    )}
                  </div>
                </div>
              </div>

              {/* Second Section - Loyalty Engine */}
              <div class="stacked-section second-section">
                <div class="product-label">Loyalty Engine</div>
                <div class="col-12">
                  <div class="relative flex justify-center gap-3 max-xl:flex-wrap xl:mb-12 xl:mt-16 xl:flex-col xl:items-center xl:gap-y-8">
                    {/* Features List */}
                    {second_list?.map((item, mindex) => (
                      <div
                        class={`order-2 flex gap-x-3 xl:order-0 max-xl:justify-center xl:items-center ${
                          mindex < 1
                            ? "flex-col max-xl:gap-y-3 md:w-[60%] xl:w-auto xl:flex-row"
                            : "flex-col gap-y-3 sm:flex-row"
                        }`}
                      >
                        {/* Main Features List */}
                        {item.row.map((item, index) => (
                          <div
                            class={`${(index + 1) % 2 === 0 ? "xl:order-3" : "xl:order-1"} xl:max-w-[370px]`}
                          >
                            <div
                              class="mb-12 min-h-full rounded-xl bg-theme-light px-6 py-12 text-center last:mb-0 md:rounded-3xl"
                              data-aos="fade-up-sm"
                              data-aos-delay={index * 100}
                            >
                              {item.title && (
                                <h3
                                  class="h6 mb-2"
                                  set:html={markdownify(item.title)}
                                />
                              )}
                              {item.description && (
                                <p set:html={markdownify(item.description)} />
                              )}
                            </div>
                          </div>
                        ))}

                        {/* Separator */}
                        <div class="xl:order-2 max-xl:hidden">
                          <ImageMod
                            class="w-full"
                            src={"/images/features/line.png"}
                            alt="line svg"
                          />
                        </div>
                      </div>
                    ))}

                    {/* Product Image (In Mobile Frame) */}
                    {second_image && (
                      <div class="order-1 w-[40%] xl:order-0 sm:w-[30%]">
                        <img
                          class="mx-auto xl:absolute xl:left-1/2 xl:top-1/2 xl:w-[35%] xl:-translate-x-1/2 xl:-translate-y-1/2"
                          src={second_image}
                          alt={title}
                        />
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

<style>
  .sticky-wrapper {
    height: auto;
    margin-top: 1rem;
    z-index: 999;
    position: relative;
  }

  /* Mobile-first styles */
  .stacked-container {
    position: relative;
    height: auto;
    overflow: visible;
    padding: 2rem 0;
    z-index: 999;
  }

  .stacked-section {
    position: relative;
    width: 100%;
    height: auto;
    transform: none;
    padding: 1rem 0;
    padding-top: 5rem;
    z-index: 999;
  }

  .second-section {
    opacity: 1;
    margin-top: -1rem;
  }

  /* Desktop styles */
  @media (min-width: 1024px) {
    .sticky-wrapper {
      height: 200vh;
    }

    .stacked-container {
      position: sticky;
      top: 80px;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .stacked-section {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      background-color: white;
      will-change: opacity;
      transition: opacity 0.3s ease;
      padding-top: 6rem;
    }

    .first-section {
      z-index: 1;
    }

    .second-section {
      z-index: 2;
    }
  }

  /* Rest of your existing styles */
  .stacked-section .col-12 {
    width: 100%;
  }

  .stacked-section .bg-theme-light {
    padding: 1.5rem;
    margin-bottom: 1rem;
  }

  /* Adjust image sizes for mobile */
  .stacked-section .order-1 {
    width: 50% !important;
    max-width: 200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .stacked-section .order-1 img {
    width: 100%;
    height: auto;
    max-height: 200px;
    object-fit: contain;
  }

  /* Tablet styles */
  @media (min-width: 768px) {
    .stacked-section .order-1 {
      width: 40% !important;
      max-width: 250px;
    }

    .stacked-section .order-1 img {
      max-height: 250px;
    }
  }

  /* Desktop styles - preserve original layout */
  @media (min-width: 1024px) {
    .stacked-section .order-1 {
      width: 30% !important;
      max-width: none;
    }

    .stacked-section .order-1 img {
      width: 25%;
      max-height: none;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  /* Ensure the desktop absolute positioning only applies at xl breakpoint */
  @media (max-width: 1279px) {
    .stacked-section .order-1 img {
      position: static;
      transform: none;
      width: 100%;
    }
  }

  /* Other responsive adjustments */
  @media (max-width: 768px) {
    .stacked-section .xl\:max-w-\[370px\] {
      max-width: 100%;
    }

    .stacked-section .gap-y-8 {
      gap: 1.5rem;
    }
  }

  /* Add this new rule to adjust spacing for the first section */
  .first-section {
    padding-bottom: 2rem;
  }

  .product-label {
    position: absolute;
    top: 2rem;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(110deg, #F0F7FF 0%, #E8F1FF 50%, #F0F7FF 100%);
    color: #0066FF;
    padding: 0.75rem 2.5rem;
    border-radius: 3rem;
    font-weight: 600;
    font-size: 0.95rem;
    box-shadow: 0 2px 10px rgba(59, 130, 246, 0.05);
    z-index: 1000;
    opacity: 1;
    transition: all 0.3s ease;
    letter-spacing: 2px;
    text-transform: uppercase;
    border: 2px solid rgba(59, 130, 246, 0.1);
    width: fit-content;
    margin: 0 auto;
    font-family: 'Inter', sans-serif;
    white-space: nowrap;
  }

  @media (min-width: 1024px) {
    .product-label {
      top: 2rem;
      transform: translateX(-50%) scale(1);
      position: absolute;
      z-index: 1000;
      box-shadow: 0 4px 15px rgba(59, 130, 246, 0.1);
      padding: 1rem 3rem;
      font-size: 1.1rem;

      &:hover {
        transform: translateX(-50%) scale(1.02);
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.15);
      }
    }

    .second-section .product-label {
      opacity: 0;
      transition: opacity 0.3s ease;
    }
  }

  @media (max-width: 1023px) {
    .product-label {
      position: relative;
      top: 1rem;
      margin: 0 auto 2rem;
      display: inline-block;
      left: 50%;
      transform: translateX(-50%);
      padding: 0.75rem 2rem;
      font-size: 0.875rem;
      background: linear-gradient(110deg, #F0F7FF 0%, #E8F1FF 50%, #F0F7FF 100%);
      z-index: 1000;
    }
  }

  /* Adjust section padding to account for label position */
  .section.features-explanation {
    padding-top: 6rem;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const stickyWrapper = document.querySelector(".sticky-wrapper");
    const firstSection = document.querySelector(".first-section") as HTMLElement;
    const secondSection = document.querySelector(".second-section") as HTMLElement;
    const firstLabel = firstSection?.querySelector(".product-label") as HTMLElement;
    const secondLabel = secondSection?.querySelector(".product-label") as HTMLElement;

    const handleScroll = () => {
      if (window.innerWidth < 1024 || !stickyWrapper || !secondSection) {
        if (firstLabel) firstLabel.style.opacity = "1";
        if (secondLabel) secondLabel.style.opacity = "1";
        return;
      }

      const wrapperRect = stickyWrapper.getBoundingClientRect();
      const viewportHeight = window.innerHeight;
      const totalScrollDistance = wrapperRect.height - viewportHeight;
      const scrolled = -wrapperRect.top;
      const progress = Math.max(0, Math.min(1, scrolled / totalScrollDistance));

      if (progress < 0.3) {
        secondSection.style.opacity = "0";
        firstLabel.style.opacity = "1";
        secondLabel.style.opacity = "0";
      } else if (progress > 0.7) {
        secondSection.style.opacity = "1";
        firstLabel.style.opacity = "0";
        secondLabel.style.opacity = "1";
      } else {
        const fadeProgress = (progress - 0.3) / 0.4;
        secondSection.style.opacity = fadeProgress.toString();
        firstLabel.style.opacity = (1 - fadeProgress).toString();
        secondLabel.style.opacity = fadeProgress.toString();
      }
    };

    handleScroll();
    window.addEventListener("scroll", handleScroll, { passive: true });
    window.addEventListener("resize", handleScroll, { passive: true });
  });
</script>
