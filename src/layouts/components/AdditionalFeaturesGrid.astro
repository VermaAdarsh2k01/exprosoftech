---
import { getEntry } from "astro:content";
import SectionHeader from "@/layouts/components/SectionHeader.astro";

const additionalFeatures = await getEntry("sections", "additional-features");
const { 
  enable,
  title,
  subtitle,
  description,
  features 
} = additionalFeatures!.data;

interface Feature {
  title: string;
  description: string;
  advantage: string;
  benefit: string;
}

// Define type for the icons object
type IconsMap = {
  [key: string]: string;
}

// SVG icons map with type
const icons: IconsMap = {
  "Real-Time Data Tracking and Insights": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"/><path d="m19 9-5 5-4-4-3 3"/></svg>`,
  
  "KYC and Participant Verification": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10"/><path d="m9 12 2 2 4-4"/></svg>`,
  
  "Automated Notifications and Communication": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"/><path d="M13.73 21a2 2 0 0 1-3.46 0"/></svg>`,
  
  "Digital Wallet and Mobile App Access": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12H3"/><path d="M3 6h18"/><path d="M21 18H3"/><rect width="18" height="18" x="3" y="3" rx="2"/></svg>`,
  
  "Segmentation and Targeted Campaigns": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><circle cx="12" cy="12" r="6"/><circle cx="12" cy="12" r="2"/></svg>`,
  
  "Customizable Rewards and Incentive Options": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 12v10H4V12"/><path d="M2 7h20v5H2z"/><path d="M12 22V7"/><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"/><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"/></svg>`
};

// Helper function to get icon safely
const getIcon = (title: string): string => {
  return icons[title] || ''; // Return empty string if icon not found
};
---

{enable && (
  <section class="section">
    <div class="container">
      <SectionHeader
        tagline={subtitle}
        heading={title}
        subheading={description}
        alignment="center"
        className="mb-10"
      />

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          features.map((feature: Feature, index: number) => (
            <div 
              class="feature-card group"
              data-aos="fade-up"
              data-aos-delay={150 + index * 50}
            >
              <div class="icon-container">
                <div class="icon-wrapper" set:html={getIcon(feature.title)} />
              </div>
              <h3 class="feature-title">{feature.title}</h3>
              <p class="feature-description">{feature.description}</p>
            </div>
          ))
        }
      </div>
    </div>
  </section>
)}

<style>
  .feature-card {
    @apply bg-white rounded-2xl p-6 transition-all duration-300
    hover:shadow-lg border border-gray-100;
    background: linear-gradient(
      110deg,
      #F0F7FF 0%,
      #E8F1FF 50%,
      #F0F7FF 100%
    );
  }

  .icon-container {
    @apply mb-8 p-4 rounded-xl w-fit;
    background: linear-gradient(
      135deg,
      rgba(59, 130, 246, 0.1) 0%,
      rgba(59, 130, 246, 0.2) 100%
    );
    border: 1px solid rgba(59, 130, 246, 0.1);
    box-shadow: 0 2px 10px rgba(59, 130, 246, 0.05);
  }

  .icon-wrapper {
    @apply text-primary transition-transform duration-300;
  }

  .feature-card:hover .icon-wrapper {
    @apply transform scale-110;
  }

  .feature-title {
    @apply text-xl font-medium text-dark mb-3;
  }

  .feature-description {
    @apply text-gray-600 text-sm mb-4 leading-relaxed;
  }

  .feature-details {
    @apply space-y-3;
  }

  .detail-item {
    @apply space-y-1;
  }

  .detail-label {
    @apply text-primary text-sm font-medium block;
  }

  .detail-text {
    @apply text-gray-600 text-sm block;
  }
</style>