---
import { getEntry } from "astro:content";
import SectionHeader from "@/layouts/components/SectionHeader.astro";

const additionalFeatures = await getEntry("sections", "additional-features-sfa");
const {
  title,
  subtitle,
  description,
  features = []
} = additionalFeatures?.data || {};

interface Feature {
  title: string;
  description: string;
  advantage: string;
  benefit: string;
}

// Define type for the icons object
type IconsMap = {
  [key: string]: string;
}

// SVG icons map with type
const icons: IconsMap = {
  "Real-Time Order Management": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="17 8 12 3 7 8"/><line x1="12" y1="3" x2="12" y2="15"/></svg>`,
  
  "Geo-Tracking & Attendance": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/><circle cx="12" cy="10" r="3"/></svg>`,
  
  "Route Optimization": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"/><path d="m19 9-5 5-4-4-3 3"/></svg>`,
  
  "Inventory Management": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zM12 17v-6M8 17v-4M16 17v-2"/></svg>`,
  
  "Digital Product Catalog": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"/><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"/></svg>`,
  
  "Customer Insights": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 0 0-3-3.87"/><path d="M16 3.13a4 4 0 0 1 0 7.75"/></svg>`,
  
  "Lead Management": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><line x1="19" y1="8" x2="19" y2="14"/><line x1="22" y1="11" x2="16" y2="11"/></svg>`,
  
  "Automated Reporting": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/><path d="M14 2v6h6"/><path d="M16 13H8"/><path d="M16 17H8"/><path d="M10 9H8"/></svg>`,
  
  "Target Tracking": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><circle cx="12" cy="12" r="6"/><circle cx="12" cy="12" r="2"/></svg>`,
  
  "In-App Communication": `<svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/><line x1="9" y1="10" x2="15" y2="10"/><line x1="12" y1="7" x2="12" y2="13"/></svg>`
};

// Helper function to get icon safely
const getIcon = (title: string): string => {
  return icons[title] || ''; // Return empty string if icon not found
};
---

{
  <section class="section">
    <div class="container">
      <SectionHeader
        tagline={subtitle}
        heading={title}
        subheading={description}
        alignment="center"
        className="mb-10"
      />

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          features.map((feature: Feature, index: number) => (
            <div 
              class="feature-card group"
              data-aos="fade-up"
              data-aos-delay={150 + index * 50}
            >
              <div class="icon-container">
                <div class="icon-wrapper" set:html={getIcon(feature.title)} />
              </div>
              <h3 class="feature-title">{feature.title}</h3>
              <p class="feature-description">{feature.description}</p>
              {/* <div class="feature-details">
                <div class="detail-item">
                  <span class="detail-label">Advantage:</span>
                  <span class="detail-text">{feature.advantage}</span>
                </div>
                <div class="detail-item">
                  <span class="detail-label">Benefit:</span>
                  <span class="detail-text">{feature.benefit}</span>
                </div>
              </div> */}
            </div>
          ))
        }
      </div>
    </div>
  </section>
}

<style>
  .feature-card {
    @apply bg-white rounded-2xl p-6 transition-all duration-300
    hover:shadow-lg border border-gray-100;
    background: linear-gradient(
      110deg,
      #F0F7FF 0%,
      #E8F1FF 50%,
      #F0F7FF 100%
    );
  }

  .icon-container {
    @apply mb-8 p-4 rounded-xl w-fit;
    background: linear-gradient(
      135deg,
      rgba(59, 130, 246, 0.1) 0%,
      rgba(59, 130, 246, 0.2) 100%
    );
    border: 1px solid rgba(59, 130, 246, 0.1);
    box-shadow: 0 2px 10px rgba(59, 130, 246, 0.05);
  }

  .icon-wrapper {
    @apply text-primary transition-transform duration-300;
  }

  .feature-card:hover .icon-wrapper {
    @apply transform scale-110;
  }

  .feature-title {
    @apply text-xl font-medium text-dark mb-3;
  }

  .feature-description {
    @apply text-gray-600 text-sm mb-4 leading-relaxed;
  }

  .feature-details {
    @apply space-y-3;
  }

  .detail-item {
    @apply space-y-1;
  }

  .detail-label {
    @apply text-primary text-sm font-medium block;
  }

  .detail-text {
    @apply text-gray-600 text-sm block;
  }
</style> 