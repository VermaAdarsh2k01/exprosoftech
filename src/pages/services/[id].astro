---
import Base from "@/layouts/Base.astro";
import { Clients } from "../../components/Clients";
import { ServicesBanner } from "@/layouts/components/services/ServicesBanner";
import { ServicesFeatures } from "@/layouts/components/services/ServicesFeatures";
import { ServicesServices } from "@/layouts/components/services/ServicesServices";
import { ServicesBestPractices } from "@/layouts/components/services/ServiceBestPractices";
import { ServicesProcess } from "@/layouts/components/services/ServicesProcess";
import { ServicesSteps } from "@/layouts/components/services/ServicesSteps";
import { ServicesBenefits } from "@/components/services/ServicesBenefits";
import ConsultationCTA from "../../components/ConsultationCTA";
import NewFAQ from "../../components/NewFAQ";
import { sanityClient } from "sanity:client";
import DynamicCTA from "../../components/DynamicCTA";
import { CloudSpecializations } from "../../components/CloudSpecializations";
import { IndustriesWeServe } from "../../components/IndustriesWeServe";
import { ScrollableLogos } from "../../components/ScrollableLogos";
import ContentSection from "../../components/ContentSection";
import { Offerings } from "../../components/Offerings";
import AccordionSection from "../../components/AccordionSection";
import { DualGridScroller } from "../../components/DualGridScroller";

interface Service {
  id: string;
  title: string;
  metaTitle: string;
  metaDescription: string;
  image: string;
  banner: any;
  contentSection: any;
  featuresSection: any;
  servicesSection: any;
  bestPracticesSection: any;
  benefitsSection: any;
  processSection: any;
  stepsSection: any;
  integrationTypesSection: any;
  dualGridScrollerSection: any;
  faqSection: any;
  accordionSection: any;
  ctaSection: any;
}

const { id } = Astro.params;

// Fetch service data directly
const service = await sanityClient.fetch(`
  *[_type == "dynamicServicePage" && slug.current == $id][0] {
    "id": slug.current,
    title,
    metaTitle,
    metaDescription,
    banner {
      title,
      description,
      buttons[] {
        label,
        link,
        isCalendly
      },
      image {
        "src": src.asset->url,
        alt
      },
      floatingElements[] {
        icon,
        title,
        value,
        color,
        position
      }
    },
    contentSection {
      isVisible,
      subtitle,
      title,
      content,
      image {
        asset->{
          url
        }
      },
      imageOverlay {
        value,
        label,
        position
      }
    },
    offeringsSection {
      isVisible,
      heading {
        title,
        subtitle,
        description
      },
      offerings[] {
        title,
        description,
        iconName
      }
    },
    
    accordionSection {
      isVisible,
      heading,
      subheading,
      description,
      items[] {
        title,
        content[] {
          ...,
          _type,
          style,
          list,
          markDefs[] {
            ...,
            _type,
            href
          }
        },
        icon
      }
    },
    dualGridScrollerSection {
      isVisible,
      heading,
      items[] {
        description
      }
    },
    featuresSection {
      isVisible,
      heading {
        tagline,
        title,
        description
      },
      features[] {
        title,
        tagline,
        description,
        icon,
        "imageUrl": image.asset->url
      }
    },
    servicesSection {
      heading {
        tagline,
        title,
        description
      },
      services[] {
        title,
        description,
        features
      }
    },
    bestPracticesSection {
      isVisible,
      heading {
        tagline,
        title,
        description
      },
      bestPractices[] {
        title,
        description,
        icon
      }
    },
    benefitsSection {
      isVisible,
      heading {
        tagline,
        title,
        description
      },
      benefits[] {
        title,
        description,
        icon
      }
    },
    processSection {
      heading {
        tagline,
        title,
        description
      },
      steps[] {
        title,
        description,
        "image": image.asset->url
      }
    },
    stepsSection {
      heading {
        tagline,
        title,
        description
      },
      steps[] {
        title,
        description,
        containers[] {
          title,
          description
        }
      }
    },
    integrationTypesSection {
      isVisible,
      heading {
        tagline,
        title,
        description
      },
      items[] {
        number,
        title,
        description,
        logos[] {
          "src": src.asset->url,
          alt
        }
      }
    },
    
    faqSection {
      title,
      pageTitle,
      subtitle,
      description,
      list[] {
        title,
        description,
        active
      }
    },
    
    ctaSection {
      tagline,
      title,
      subtitle,
      description,
      metrices[] {
        value,
        label,
        icon
      },
      buttonText,
      image {
        "src": src.asset->url,
        alt
      }
    }
  }
`, { id });

if (!service) {
  return Astro.redirect('/404');
}
---

<Base
  title={service.title}
  meta_title={service.metaTitle}
  description={service.metaDescription}
  image={service.image}
>
  <ServicesBanner client:load content={service.banner} />
  
  <!-- <Clients client:load /> -->

  {service.contentSection?.isVisible && (
    <ContentSection client:visible data={service.contentSection} />
  )}

  {service.offeringsSection?.isVisible && (
    <Offerings 
      client:visible 
      data={service.offeringsSection} 
    />
  )}

  {service.accordionSection?.isVisible && (
    <AccordionSection 
      client:visible 
      heading={service.accordionSection.heading}
      subheading={service.accordionSection.subheading}
      description={service.accordionSection.description}
      items={service.accordionSection.items}
    />
  )}

  {service.dualGridScrollerSection?.isVisible && (
    <DualGridScroller 
      client:visible 
      data={service.dualGridScrollerSection} 
    />
  )}

  {service.featuresSection?.isVisible && (
    <ServicesFeatures 
      client:visible 
      features={service.featuresSection.features} 
      heading={service.featuresSection.heading}
    />
  )}
  {service.integrationTypesSection?.isVisible && (
    <ScrollableLogos 
      client:visible 
      data={{
        heading: service.integrationTypesSection.heading,
        items: service.integrationTypesSection.items?.map((item: any) => ({
          id: item.number,
          number: item.number,
          title: item.title,
          description: item.description,
          logos: item.logos?.map((logo: any) => ({
            src: logo.src || '',
            alt: logo.alt || item.title
          })) || []
        })) || []
      }}
    />
  )}
  <!-- <ServicesServices 
    client:visible 
    services={service.servicesSection.services} 
    heading={service.servicesSection.heading}
  /> -->
  

  <ServicesSteps 
    client:visible 
    process={service.stepsSection?.steps || []} 
    heading={service.stepsSection?.heading}
  />

  
  {service.processSection?.isVisible && (
    <ServicesProcess 
      client:visible 
        process={service.processSection.steps} 
        heading={service.processSection.heading}
      />
  )}
  
  {service.bestPracticesSection?.isVisible && (
    <ServicesBestPractices 
      client:visible 
      benefits={service.bestPracticesSection?.bestPractices} 
      heading={service.bestPracticesSection?.heading}
    /> 
  )}
  
  <IndustriesWeServe client:visible />


  <CloudSpecializations client:visible />
  
  {service.benefitsSection?.isVisible && (
    <ServicesBenefits 
      client:visible 
      benefits={service.benefitsSection.benefits} 
      heading={service.benefitsSection.heading}
    />
  )}
  
  {service.faqSection && (
    <NewFAQ client:visible Faq={[service.faqSection]} />
  )}

  
  {service.ctaSection && (
    <DynamicCTA client:visible ctaContent={service.ctaSection} />
  )}

</Base>
